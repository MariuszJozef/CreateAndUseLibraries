#[==================================================[
SharedLib
#]==================================================]
add_library(targetSharedLib SHARED)

target_include_directories(targetSharedLib 
    PRIVATE
        hdr
    PUBLIC
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
        $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
)

#[=========================[
N.B. 
Public headers are:
-- header files which need to be explicitly included by another application/library
-- header files which are included in the aforementioned header files.
Private header are:
-- header files which are only included in source (*.cpp, *.c) files but not in any of the public header files
-- header files included in other private header files
]=========================]

target_sources(targetSharedLib
    PRIVATE
        hdr/SharedLibPrivate.hpp
        src/SharedLibPrivate.cpp
        src/SharedLibApi.cpp
    PUBLIC 
        FILE_SET HEADERS 
        BASE_DIRS ${CMAKE_SOURCE_DIR}/SharedLibNeedsCpp17/include
        FILES 
            include/SharedLibApi.hpp
            ${CMAKE_SOURCE_DIR}/SharedLibNeedsCpp17/include/AutoGeneratedSharedLibExports.hpp
)

set_target_properties(targetSharedLib
    PROPERTIES
        OUTPUT_NAME                         SharedLibrary
        EXPORT_NAME                         SharedLib
        DEBUG_POSTFIX                       "_d"
        RUNTIME_OUTPUT_DIRECTORY            ${CMAKE_BINARY_DIR}/buildOut/SharedLibNeedsCpp17/bin/$<CONFIG>
        PDB_OUTPUT_DIRECTORY                ${CMAKE_BINARY_DIR}/buildOut/SharedLibNeedsCpp17/pdb/$<CONFIG>
        LIBRARY_OUTPUT_DIRECTORY            ${CMAKE_BINARY_DIR}/buildOut/SharedLibNeedsCpp17/lib/$<CONFIG>
        ARCHIVE_OUTPUT_DIRECTORY            ${CMAKE_BINARY_DIR}/buildOut/SharedLibNeedsCpp17/lib/$<CONFIG>
        RUNTIME_OUTPUT_DIRECTORY_<Config>   ${RUNTIME_OUTPUT_DIRECTORY}
        PDB_OUTPUT_DIRECTORY_<Config>       ${PDB_OUTPUT_DIRECTORY}
        LIBRARY_OUTPUT_DIRECTORY_<Config>   ${LIBRARY_OUTPUT_DIRECTORY}
        ARCHIVE_OUTPUT_DIRECTORY_<Config>   ${ARCHIVE_OUTPUT_DIRECTORY}
)

target_compile_features(targetSharedLib
    PUBLIC
        cxx_std_17
)

if(MSVC)

    target_compile_options(targetSharedLib 
        PRIVATE
            /EHsc
            /W2
            # /Wall
    )

else()

    target_compile_options(targetSharedLib 
        PRIVATE
            -Wall
            # -Wextra
            # -Wpedantic
    )

endif()

#[==================================================[
Let cmake generate proper __declspec(dllexport) and __declspec(dllexport) needed by Windows
#]==================================================]
include(GenerateExportHeader)
generate_export_header(targetSharedLib
    EXPORT_FILE_NAME ${CMAKE_SOURCE_DIR}/SharedLibNeedsCpp17/include/AutoGeneratedSharedLibExports.hpp
    EXPORT_MACRO_NAME SHAREDLIB_API
    INCLUDE_GUARD_NAME AUTO_GENERATED_SHAREDLIB_EXPORTS_HPP
)
